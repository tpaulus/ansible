---
- name: Deploy Home Assistant
  hosts: tags_home_assistant
  become: true

  roles:
    - role: docker
      vars:
        docker_config:
          metrics-addr: "0.0.0.0:9323"

  tasks:
    - name: Create Data Dirs
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        recurse: true
        mode: '0755'
      loop:
        - "/etc/docker-data/traefik"
        - "/etc/docker-data/home-assistant"

    - name: Install Home Assistant External Dependencies
      ansible.builtin.apt:
        name:
          - bluez
        state: present

    - name: Create and start Home Assistant
      vars:
        dir: /var/docker-compose-files/home-assistant
      block:
        - name: Create Dir
          ansible.builtin.file:
            path: "{{ dir }}"
            state: directory
            recurse: true
            mode: "0700"
        - name: Place Compose File
          ansible.builtin.template:
            src: compose/home-assistant/docker-compose.yaml
            dest: "{{ dir }}/docker-compose.yaml"
            mode: "0600"

        - name: Compose Up
          ansible.builtin.command:
            cmd: "docker compose up -d"
            chdir: "{{ dir }}"
          register: output
          changed_when: '"Started" in output.stderr'

        - name: Show results
          ansible.builtin.debug:
            var: output

- name: Configure Home Assistant Backups
  hosts: tags_home_assistant
  become: true

  vars:
    backup_script: /usr/sbin/backup-home-assistant.sh
    log_file: /var/log/home-assistant-backup.log

  tasks:
    - name: Install Dependencies
      ansible.builtin.apt:
        name:
          - nfs-common
          - rsync
        state: present
        update_cache: true

    - name: Place Backup Script
      vars:
        backup_server: woodlandpark.brickyard.whitestar.systems
        backup_path: /mnt/tank/Server\ Backups/HomeAssistant/
        backup_source: /etc/docker-data/home-assistant

      ansible.builtin.template:
        src: home-assistant/backup_ha.sh.j2
        dest: "{{ backup_script }}"
        mode: "0755"

    - name: Check if /etc/logrotate.d directory exists
      ansible.builtin.stat:
        path: /etc/logrotate.d
      register: logrotate_dir

    - name: Create logrotate entry for home-assistant-backup.log
      ansible.builtin.template:
        src: home-assistant/etc_logrotate.d_ha_backups.j2
        dest: /etc/logrotate.d/ha_backups
        owner: root
        group: root
        mode: "0644"
      when: logrotate_dir.stat.exists

    - name: Configure Cron Job
      ansible.builtin.cron:
        name: backup-home-assistant
        minute: 0
        hour: "*"
        job: "bash {{ backup_script }} > {{ log_file }} 2>&1"

- name: Allow Access to Share
  hosts: device_roles_storage
  environment:
    middleware_method: client
  vars:
    allowed_host_ips: "{{ groups['tags_home_assistant'] | map('extract', hostvars, 'ansible_host') | list | sort }}"
  tasks:
    - name: Update Home Assistant Backup Share  # noqa: args[module]
      arensb.truenas.sharing_nfs:
        name: "Server Backups - Home Assistant"
        path: "/mnt/tank/Server\ Backups/HomeAssistant"
        hosts: "{{ allowed_host_ips }}"
