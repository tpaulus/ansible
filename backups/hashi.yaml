- name: Configure Consul Backups
  hosts: tags_consul_server
  vars:
    backup_script: /usr/sbin/backup-consul.sh
    log_file: /var/log/consul-backup.log
  tasks:
    - name: Install Dependencies
      ansible.builtin.apt:
        name:
          - nfs-common
        state: present
        update_cache: true

    - name: Place Consul Backup Script
      ansible.builtin.template:
        src: "consul.sh.j2"
        dest: "{{ backup_script }}"
        mode: "0555"

    - name: Install Crontab
      ansible.builtin.cron:
        name: backup-consul
        minute: 0
        hour: "*/4"
        job: "bash {{ backup_script }} > {{ log_file }} 2>&1"

    - name: Check if /etc/logrotate.d directory exists
      ansible.builtin.stat:
        path: /etc/logrotate.d
      register: logrotate_dir

    - name: Create logrotate entry for consul-backup.log
      ansible.builtin.template:
        src: etc_logrotate.d_raft_backups.j2
        dest: /etc/logrotate.d/consul_raft_backups
        owner: root
        group: root
        mode: "0644"
      when: logrotate_dir.stat.exists

- name: Configure Nomad Backups
  hosts: tags_nomad
  vars:
    backup_script: /usr/sbin/backup-nomad.sh
    log_file: /var/log/nomad-backup.log
  tasks:
    - name: Install Dependencies
      ansible.builtin.apt:
        name:
          - nfs-common
        state: present
        update_cache: true

    - name: Place Nomad Backup Script
      ansible.builtin.template:
        src: "nomad.sh.j2"
        dest: "{{ backup_script }}"
        mode: "0555"

    - name: Install Crontab
      ansible.builtin.cron:
        name: backup-nomad
        minute: 0
        hour: "*/4"
        job: "bash {{ backup_script }} > {{ log_file }} 2>&1"

    - name: Check if /etc/logrotate.d directory exists
      ansible.builtin.stat:
        path: /etc/logrotate.d
      register: logrotate_dir

    - name: Create logrotate entry for nomad-backup.log
      ansible.builtin.template:
        src: etc_logrotate.d_raft_backups.j2
        dest: /etc/logrotate.d/nomad_raft_backups
        owner: root
        group: root
        mode: "0644"
      when: logrotate_dir.stat.exists

- name: Allow Access to Share
  hosts: device_roles_storage
  environment:
    middleware_method: client
  vars:
    allowed_host_ips: "{{ groups['tags_nomad'] | union(groups['tags_consul_server']) | map('extract', hostvars, 'ansible_host') | list | sort }}"
  tasks:
    - name: Update Raft Share  # noqa: args[module]
      arensb.truenas.sharing_nfs:
        name: "Server Backups - Rafts"
        path: "/mnt/tank/Server Backups/Raft Backups"
        hosts: "{{ allowed_host_ips }}"
